[{"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\index.tsx":"1","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\App.tsx":"3","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Pages.tsx":"4","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\components\\Navbar.tsx":"5","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\History.tsx":"6","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Home.tsx":"7","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Skill.tsx":"8","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Products.tsx":"9","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\About.tsx":"10","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Contact.tsx":"11","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\components\\Footer.tsx":"12"},{"size":500,"mtime":1606633519725,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1606633519725,"results":"15","hashOfConfig":"14"},{"size":172,"mtime":1636421171271,"results":"16","hashOfConfig":"14"},{"size":185,"mtime":1636421022196,"results":"17","hashOfConfig":"14"},{"size":6336,"mtime":1636452517003,"results":"18","hashOfConfig":"14"},{"size":2813,"mtime":1647435442254,"results":"19","hashOfConfig":"14"},{"size":1055,"mtime":1636467925809,"results":"20","hashOfConfig":"14"},{"size":3593,"mtime":1640097095349,"results":"21","hashOfConfig":"14"},{"size":5146,"mtime":1645190829059,"results":"22","hashOfConfig":"14"},{"size":4804,"mtime":1644644898397,"results":"23","hashOfConfig":"14"},{"size":4393,"mtime":1619273423884,"results":"24","hashOfConfig":"14"},{"size":864,"mtime":1644495371597,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wr4bou",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\index.tsx",[],["54","55"],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\App.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Pages.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\components\\Navbar.tsx",["56"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport \"../assets/styles/navbar.scss\";\r\nimport Home from \"../pages/Home\";\r\nimport About from \"../pages/About\";\r\nimport Skill from \"../pages/Skill\";\r\nimport History from \"../pages/History\";\r\nimport Products from \"../pages/Products\";\r\nimport Contact from \"../pages/Contact\";\r\nimport { Tab, Tabs, AppBar } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { NavbarItem } from \"../Types\";\r\nimport { NavbarItemLabel } from \"../Types\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PortraitIcon from \"@mui/icons-material/Portrait\";\r\nimport BuildIcon from \"@mui/icons-material/Build\";\r\nimport ColorLensIcon from \"@mui/icons-material/ColorLens\";\r\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\n\r\nconst Navbar = () => {\r\n  const navbarItem: NavbarItem[] = [\r\n    {\r\n      id: 1,\r\n      route: \"/\",\r\n      label: \"HOME\",\r\n      icon: \"HOME\",\r\n    },\r\n    {\r\n      id: 2,\r\n      route: \"/about\",\r\n      label: \"ABOUT\",\r\n      icon: \"ABOUT\",\r\n    },\r\n    {\r\n      id: 3,\r\n      route: \"/skills\",\r\n      label: \"SKILL\",\r\n      icon: \"SKILL\",\r\n    },\r\n    {\r\n      id: 4,\r\n      route: \"/history\",\r\n      label: \"HISTORY\",\r\n      icon: \"HISTORY\",\r\n    },\r\n    {\r\n      id: 5,\r\n      route: \"/products\",\r\n      label: \"PRODUCT\",\r\n      icon: \"PRODUCT\",\r\n    },\r\n    {\r\n      id: 6,\r\n      route: \"/contact\",\r\n      label: \"CONTACT\",\r\n      icon: \"CONTACT\",\r\n    },\r\n  ];\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const selectIcon = (icon: NavbarItemLabel) => {\r\n    switch (icon) {\r\n      case \"HOME\":\r\n        return <HomeIcon className=\"menu-item-icon large-screen home\" />;\r\n      case \"ABOUT\":\r\n        return (\r\n          <PortraitIcon className=\"menu-item-icon large-screen about-me\" />\r\n        );\r\n      case \"SKILL\":\r\n        return <BuildIcon className=\"menu-item-icon large-screen skills\" />;\r\n      case \"HISTORY\":\r\n        return (\r\n          <AccessTimeIcon className=\"menu-item-icon large-screen my-history\" />\r\n        );\r\n      case \"PRODUCT\":\r\n        return (\r\n          <ColorLensIcon className=\"menu-item-icon large-screen products\" />\r\n        );\r\n      case \"CONTACT\":\r\n        return <EmailIcon className=\"menu-item-icon large-screen contacts\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router\r\n      basename={process.env.NODE_ENV === \"production\" ? \"/Portfolio\" : \"\"}\r\n    >\r\n      <Route\r\n        path=\"/\"\r\n        render={(history) => (\r\n          <AppBar color=\"default\">\r\n            <div className=\"tabs\">\r\n              <Tabs\r\n                value={\r\n                  history.location.pathname !== \"/\"\r\n                    ? history.location.pathname\r\n                    : false\r\n                }\r\n                TabIndicatorProps={{ style: { backgroundColor: \"#161616\" } }}\r\n                variant=\"scrollable\"\r\n              >\r\n                {navbarItem.map((val) => {\r\n                  return (\r\n                    <Tab\r\n                      label={val.label}\r\n                      value={val.route}\r\n                      key={val.id}\r\n                      // icon={selectIcon(val.icon)}\r\n                      component={Link}\r\n                      to={val.route}\r\n                    />\r\n                  );\r\n                })}\r\n              </Tabs>\r\n            </div>\r\n            <div className=\"btn-menu\">\r\n              <p className=\"navbar-title\">Portfolio</p>\r\n              <div className=\"btn\">\r\n                <Button\r\n                  aria-controls=\"simple-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleClick}\r\n                >\r\n                  {!anchorEl ? (\r\n                    <MenuIcon className=\"menu-icon\" />\r\n                  ) : (\r\n                    <CloseIcon className=\"close-icon\" />\r\n                  )}\r\n                </Button>\r\n              </div>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/\">\r\n                  <HomeIcon className=\"menu-item-icon home\" />\r\n                  HOME\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/about\">\r\n                  <PortraitIcon className=\"menu-item-icon about-me\" />\r\n                  ABOUT\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/skills\">\r\n                  <BuildIcon className=\"menu-item-icon skills\" />\r\n                  SKILLS\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/history\">\r\n                  <AccessTimeIcon className=\"menu-item-icon my-history\" />\r\n                  HISTORY\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/products\">\r\n                  <ColorLensIcon className=\"menu-item-icon products\" />\r\n                  PRODUCTS\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/contact\">\r\n                  <EmailIcon className=\"menu-item-icon contacts\" />\r\n                  CONTACT\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </AppBar>\r\n        )}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/skills\" component={Skill} />\r\n        <Route path=\"/history\" component={History} />\r\n        <Route path=\"/products\" component={Products} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\History.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Home.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Skill.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Products.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\About.tsx",["57","58","59","60","61"],"import React, { useState } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Footer from \"../components/Footer\";\r\nimport Modal from \"react-modal\";\r\nimport { MyInfo } from \"../Types\";\r\nimport \"../assets/styles/about.scss\";\r\n\r\nconst createData = (name: string, context: string) => {\r\n  return { name, context };\r\n};\r\n\r\nconst rows = [\r\n  createData(\"名前\", \"yuki\"),\r\n  createData(\"所属\", \"同志社大学\"),\r\n  createData(\"趣味\", \"音楽を聴くこと\"),\r\n];\r\n\r\nconst myInfo: MyInfo[] = [\r\n  {\r\n    id: 1,\r\n    question: \"Q.　なんでプログラミング始めたの？勉強してるの？\",\r\n    answer: \"A.　大学で情報系に入ったから.　将来性があるから.　楽しいから.\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"Q.　今後なにしたい？\",\r\n    answer:\r\n      \"A.　自分が使っているモバイルアプリ開発に携わりたい．高い技術力を身に着けたい.\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Q.　プログラミング以外に何してる？\",\r\n    answer:\r\n      \"A.　ゲームやってるか、本読んでるか、Youtube見てる。コロナ収まったらいろんな場所に行きたい．\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Q.　どんな音楽聴いてるの？\",\r\n    answer: \"A.　AAA, DaiCE, TWICE, BTS\",\r\n  },\r\n];\r\n\r\nconst About: React.FC = () => {\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsOpenModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"pageAbout\">\r\n        <p>About me</p>\r\n      </div>\r\n      <div className=\"container\">\r\n        <TableContainer>\r\n          <Table className=\"table\">\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell align=\"center\" className=\"tableItem headline\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" className=\"tableItem\">\r\n                    {row.context}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"queAndAns\">\r\n          {myInfo.map((info) => {\r\n            return (\r\n              <div className=\"myInfo\" key={info.id}>\r\n                <div className=\"question\">\r\n                  <p>{info.question}</p>\r\n                </div>\r\n                <div className=\"answer\">\r\n                  <p>\r\n                    {info.answer}\r\n                    {/* {info.id === 2 ? (\r\n                      <span>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          className=\"openButton\"\r\n                          onClick={openModal}\r\n                        >\r\n                          技術力？\r\n                        </Button>\r\n                        <Modal\r\n                          isOpen={isOpenModal}\r\n                          onRequestClose={closeModal}\r\n                          contentLabel=\"Example Modal\"\r\n                          className=\"modal\"\r\n                        >\r\n                          <div className=\"winTitle\">\r\n                            <p>技術力とは？</p>\r\n                          </div>\r\n                          <div className=\"winContext\">\r\n                            <p>\r\n                              ・その技術に対して深い知識を持ち、ソースコードを読み、理解できる力\r\n                            </p>\r\n                            <p>\r\n                              ・その技術を使って実際にコードを書く力（＝開発力）\r\n                            </p>\r\n                            <p>だと私は考えています.</p>\r\n                          </div>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            className=\"closeButton\"\r\n                            onClick={closeModal}\r\n                          >\r\n                            close\r\n                          </Button>\r\n                        </Modal>\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\pages\\Contact.tsx",[],"C:\\Users\\rikuy\\Desktop\\pro\\React\\portfolio\\src\\components\\Footer.tsx",[],["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":75,"column":9,"nodeType":"70","messageId":"71","endLine":75,"endColumn":19},{"ruleId":"68","severity":1,"message":"72","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":9,"column":8,"nodeType":"70","messageId":"71","endLine":9,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":49,"column":10,"nodeType":"70","messageId":"71","endLine":49,"endColumn":21},{"ruleId":"68","severity":1,"message":"75","line":51,"column":9,"nodeType":"70","messageId":"71","endLine":51,"endColumn":18},{"ruleId":"68","severity":1,"message":"76","line":55,"column":9,"nodeType":"70","messageId":"71","endLine":55,"endColumn":19},{"ruleId":"64","replacedBy":"77"},{"ruleId":"66","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'selectIcon' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Modal' is defined but never used.","'isOpenModal' is assigned a value but never used.","'openModal' is assigned a value but never used.","'closeModal' is assigned a value but never used.",["79"],["80"],"no-global-assign","no-unsafe-negation"]